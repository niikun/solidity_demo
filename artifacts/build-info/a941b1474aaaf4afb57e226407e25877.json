{
	"id": "a941b1474aaaf4afb57e226407e25877",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"will.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.4.22 <0.9.0;\r\n\r\ncontract Will {\r\n    address owner;\r\n    uint fortune;\r\n    bool deceased;\r\n\r\n    constructor() payable public {\r\n        owner = msg.sender; //msg sender represents address that is called\r\n        fortune = msg.value;\r\n        deceased = false;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    modifier mustBeDeceased {\r\n        require(deceased == true);\r\n        _;\r\n    }\r\n    // list of famly address\r\n    address payable[] familyWallets;\r\n\r\n    // map through inheritance\r\n    mapping(address=> uint) inheritance;\r\n\r\n    // set inheritance for each address\r\n\r\n    function setInheritance(address payable wallet, uint amount) public onlyOwner {\r\n        familyWallets.push(wallet);\r\n        inheritance[wallet] = amount;\r\n    }\r\n\r\n    function isDeceased() public onlyOwner {\r\n        deceased = true;\r\n        payout();\r\n    }\r\n\r\n    // pay each family member based on their wallet\r\n    function payout() private mustBeDeceased {\r\n        for (uint i=0; i < familyWallets.length; i++) {\r\n            familyWallets[i].transfer(inheritance[familyWallets[i]]);\r\n        }\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"will.sol": {
				"Will": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "isDeceased",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "wallet",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "setInheritance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"will.sol\":73:1206  contract Will {\r... */\n  mstore(0x40, 0x80)\n    /* \"will.sol\":203:213  msg.sender */\n  caller\n    /* \"will.sol\":195:200  owner */\n  0x00\n  dup1\n    /* \"will.sol\":195:213  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"will.sol\":281:290  msg.value */\n  callvalue\n    /* \"will.sol\":271:278  fortune */\n  0x01\n    /* \"will.sol\":271:290  fortune = msg.value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"will.sol\":312:317  false */\n  0x00\n    /* \"will.sol\":301:309  deceased */\n  0x02\n  0x00\n    /* \"will.sol\":301:317  deceased = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"will.sol\":73:1206  contract Will {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"will.sol\":73:1206  contract Will {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x85ac4515\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x88d51594\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"will.sol\":862:954  function isDeceased() public onlyOwner {\r... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      stop\n        /* \"will.sol\":692:854  function setInheritance(address payable wallet, uint amount) public onlyOwner {\r... */\n    tag_4:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      stop\n        /* \"will.sol\":862:954  function isDeceased() public onlyOwner {\r... */\n    tag_6:\n        /* \"will.sol\":385:390  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"will.sol\":371:390  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"will.sol\":371:381  msg.sender */\n      caller\n        /* \"will.sol\":371:390  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"will.sol\":363:391  require(msg.sender == owner) */\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n        /* \"will.sol\":923:927  true */\n      0x01\n        /* \"will.sol\":912:920  deceased */\n      0x02\n      0x00\n        /* \"will.sol\":912:927  deceased = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"will.sol\":938:946  payout() */\n      tag_14\n        /* \"will.sol\":938:944  payout */\n      tag_15\n        /* \"will.sol\":938:946  payout() */\n      jump\t// in\n    tag_14:\n        /* \"will.sol\":862:954  function isDeceased() public onlyOwner {\r... */\n      jump\t// out\n        /* \"will.sol\":692:854  function setInheritance(address payable wallet, uint amount) public onlyOwner {\r... */\n    tag_10:\n        /* \"will.sol\":385:390  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"will.sol\":371:390  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"will.sol\":371:381  msg.sender */\n      caller\n        /* \"will.sol\":371:390  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"will.sol\":363:391  require(msg.sender == owner) */\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n        /* \"will.sol\":781:794  familyWallets */\n      0x03\n        /* \"will.sol\":800:806  wallet */\n      dup3\n        /* \"will.sol\":781:807  familyWallets.push(wallet) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"will.sol\":840:846  amount */\n      dup1\n        /* \"will.sol\":818:829  inheritance */\n      0x04\n        /* \"will.sol\":818:837  inheritance[wallet] */\n      0x00\n        /* \"will.sol\":830:836  wallet */\n      dup5\n        /* \"will.sol\":818:837  inheritance[wallet] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"will.sol\":818:846  inheritance[wallet] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"will.sol\":692:854  function setInheritance(address payable wallet, uint amount) public onlyOwner {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"will.sol\":1015:1203  function payout() private mustBeDeceased {\r... */\n    tag_15:\n        /* \"will.sol\":472:476  true */\n      0x01\n        /* \"will.sol\":460:476  deceased == true */\n      iszero\n      iszero\n        /* \"will.sol\":460:468  deceased */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"will.sol\":460:476  deceased == true */\n      iszero\n      iszero\n      eq\n        /* \"will.sol\":452:477  require(deceased == true) */\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n        /* \"will.sol\":1072:1078  uint i */\n      0x00\n        /* \"will.sol\":1067:1196  for (uint i=0; i < familyWallets.length; i++) {\r... */\n    tag_23:\n        /* \"will.sol\":1086:1099  familyWallets */\n      0x03\n        /* \"will.sol\":1086:1106  familyWallets.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"will.sol\":1082:1083  i */\n      dup2\n        /* \"will.sol\":1082:1106  i < familyWallets.length */\n      lt\n        /* \"will.sol\":1067:1196  for (uint i=0; i < familyWallets.length; i++) {\r... */\n      iszero\n      tag_24\n      jumpi\n        /* \"will.sol\":1128:1141  familyWallets */\n      0x03\n        /* \"will.sol\":1142:1143  i */\n      dup2\n        /* \"will.sol\":1128:1144  familyWallets[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_26\n      jumpi\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n    tag_26:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"will.sol\":1128:1153  familyWallets[i].transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"will.sol\":1128:1184  familyWallets[i].transfer(inheritance[familyWallets[i]]) */\n      0x08fc\n        /* \"will.sol\":1154:1165  inheritance */\n      0x04\n        /* \"will.sol\":1154:1183  inheritance[familyWallets[i]] */\n      0x00\n        /* \"will.sol\":1166:1179  familyWallets */\n      0x03\n        /* \"will.sol\":1180:1181  i */\n      dup6\n        /* \"will.sol\":1166:1182  familyWallets[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_30\n      jumpi\n      tag_31\n      tag_28\n      jump\t// in\n    tag_31:\n    tag_30:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"will.sol\":1154:1183  inheritance[familyWallets[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"will.sol\":1128:1184  familyWallets[i].transfer(inheritance[familyWallets[i]]) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_34\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_34:\n      pop\n        /* \"will.sol\":1108:1111  i++ */\n      dup1\n      dup1\n      tag_35\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      swap2\n      pop\n      pop\n        /* \"will.sol\":1067:1196  for (uint i=0; i < familyWallets.length; i++) {\r... */\n      jump(tag_23)\n    tag_24:\n      pop\n        /* \"will.sol\":1015:1203  function payout() private mustBeDeceased {\r... */\n      jump\t// out\n        /* \"#utility.yul\":7:162   */\n    tag_38:\n        /* \"#utility.yul\":61:66   */\n      0x00\n        /* \"#utility.yul\":99:105   */\n      dup2\n        /* \"#utility.yul\":86:106   */\n      calldataload\n        /* \"#utility.yul\":77:106   */\n      swap1\n      pop\n        /* \"#utility.yul\":115:156   */\n      tag_40\n        /* \"#utility.yul\":150:155   */\n      dup2\n        /* \"#utility.yul\":115:156   */\n      tag_41\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":7:162   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":168:307   */\n    tag_42:\n        /* \"#utility.yul\":214:219   */\n      0x00\n        /* \"#utility.yul\":252:258   */\n      dup2\n        /* \"#utility.yul\":239:259   */\n      calldataload\n        /* \"#utility.yul\":230:259   */\n      swap1\n      pop\n        /* \"#utility.yul\":268:301   */\n      tag_44\n        /* \"#utility.yul\":295:300   */\n      dup2\n        /* \"#utility.yul\":268:301   */\n      tag_45\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":168:307   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":313:803   */\n    tag_9:\n        /* \"#utility.yul\":389:395   */\n      0x00\n        /* \"#utility.yul\":397:403   */\n      dup1\n        /* \"#utility.yul\":446:448   */\n      0x40\n        /* \"#utility.yul\":434:443   */\n      dup4\n        /* \"#utility.yul\":425:432   */\n      dup6\n        /* \"#utility.yul\":421:444   */\n      sub\n        /* \"#utility.yul\":417:449   */\n      slt\n        /* \"#utility.yul\":414:533   */\n      iszero\n      tag_47\n      jumpi\n        /* \"#utility.yul\":452:531   */\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":414:533   */\n    tag_47:\n        /* \"#utility.yul\":572:573   */\n      0x00\n        /* \"#utility.yul\":597:658   */\n      tag_50\n        /* \"#utility.yul\":650:657   */\n      dup6\n        /* \"#utility.yul\":641:647   */\n      dup3\n        /* \"#utility.yul\":630:639   */\n      dup7\n        /* \"#utility.yul\":626:648   */\n      add\n        /* \"#utility.yul\":597:658   */\n      tag_38\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":587:658   */\n      swap3\n      pop\n        /* \"#utility.yul\":543:668   */\n      pop\n        /* \"#utility.yul\":707:709   */\n      0x20\n        /* \"#utility.yul\":733:786   */\n      tag_51\n        /* \"#utility.yul\":778:785   */\n      dup6\n        /* \"#utility.yul\":769:775   */\n      dup3\n        /* \"#utility.yul\":758:767   */\n      dup7\n        /* \"#utility.yul\":754:776   */\n      add\n        /* \"#utility.yul\":733:786   */\n      tag_42\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":723:786   */\n      swap2\n      pop\n        /* \"#utility.yul\":678:796   */\n      pop\n        /* \"#utility.yul\":313:803   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":890:994   */\n    tag_54:\n        /* \"#utility.yul\":935:942   */\n      0x00\n        /* \"#utility.yul\":964:988   */\n      tag_56\n        /* \"#utility.yul\":982:987   */\n      dup3\n        /* \"#utility.yul\":964:988   */\n      tag_57\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":953:988   */\n      swap1\n      pop\n        /* \"#utility.yul\":890:994   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1000:1126   */\n    tag_57:\n        /* \"#utility.yul\":1037:1044   */\n      0x00\n        /* \"#utility.yul\":1077:1119   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1070:1075   */\n      dup3\n        /* \"#utility.yul\":1066:1120   */\n      and\n        /* \"#utility.yul\":1055:1120   */\n      swap1\n      pop\n        /* \"#utility.yul\":1000:1126   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1132:1209   */\n    tag_59:\n        /* \"#utility.yul\":1169:1176   */\n      0x00\n        /* \"#utility.yul\":1198:1203   */\n      dup2\n        /* \"#utility.yul\":1187:1203   */\n      swap1\n      pop\n        /* \"#utility.yul\":1132:1209   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1215:1448   */\n    tag_36:\n        /* \"#utility.yul\":1254:1257   */\n      0x00\n        /* \"#utility.yul\":1277:1301   */\n      tag_62\n        /* \"#utility.yul\":1295:1300   */\n      dup3\n        /* \"#utility.yul\":1277:1301   */\n      tag_59\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1268:1301   */\n      swap2\n      pop\n        /* \"#utility.yul\":1323:1389   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1316:1321   */\n      dup3\n        /* \"#utility.yul\":1313:1390   */\n      eq\n        /* \"#utility.yul\":1310:1413   */\n      iszero\n      tag_63\n      jumpi\n        /* \"#utility.yul\":1393:1411   */\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1310:1413   */\n    tag_63:\n        /* \"#utility.yul\":1440:1441   */\n      0x01\n        /* \"#utility.yul\":1433:1438   */\n      dup3\n        /* \"#utility.yul\":1429:1442   */\n      add\n        /* \"#utility.yul\":1422:1442   */\n      swap1\n      pop\n        /* \"#utility.yul\":1215:1448   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1454:1634   */\n    tag_65:\n        /* \"#utility.yul\":1502:1579   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1499:1500   */\n      0x00\n        /* \"#utility.yul\":1492:1580   */\n      mstore\n        /* \"#utility.yul\":1599:1603   */\n      0x11\n        /* \"#utility.yul\":1596:1597   */\n      0x04\n        /* \"#utility.yul\":1589:1604   */\n      mstore\n        /* \"#utility.yul\":1623:1627   */\n      0x24\n        /* \"#utility.yul\":1620:1621   */\n      0x00\n        /* \"#utility.yul\":1613:1628   */\n      revert\n        /* \"#utility.yul\":1640:1820   */\n    tag_28:\n        /* \"#utility.yul\":1688:1765   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1685:1686   */\n      0x00\n        /* \"#utility.yul\":1678:1766   */\n      mstore\n        /* \"#utility.yul\":1785:1789   */\n      0x32\n        /* \"#utility.yul\":1782:1783   */\n      0x04\n        /* \"#utility.yul\":1775:1790   */\n      mstore\n        /* \"#utility.yul\":1809:1813   */\n      0x24\n        /* \"#utility.yul\":1806:1807   */\n      0x00\n        /* \"#utility.yul\":1799:1814   */\n      revert\n        /* \"#utility.yul\":1949:2066   */\n    tag_49:\n        /* \"#utility.yul\":2058:2059   */\n      0x00\n        /* \"#utility.yul\":2055:2056   */\n      dup1\n        /* \"#utility.yul\":2048:2060   */\n      revert\n        /* \"#utility.yul\":2072:2210   */\n    tag_41:\n        /* \"#utility.yul\":2153:2185   */\n      tag_72\n        /* \"#utility.yul\":2179:2184   */\n      dup2\n        /* \"#utility.yul\":2153:2185   */\n      tag_54\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":2146:2151   */\n      dup2\n        /* \"#utility.yul\":2143:2186   */\n      eq\n        /* \"#utility.yul\":2133:2204   */\n      tag_73\n      jumpi\n        /* \"#utility.yul\":2200:2201   */\n      0x00\n        /* \"#utility.yul\":2197:2198   */\n      dup1\n        /* \"#utility.yul\":2190:2202   */\n      revert\n        /* \"#utility.yul\":2133:2204   */\n    tag_73:\n        /* \"#utility.yul\":2072:2210   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2216:2338   */\n    tag_45:\n        /* \"#utility.yul\":2289:2313   */\n      tag_75\n        /* \"#utility.yul\":2307:2312   */\n      dup2\n        /* \"#utility.yul\":2289:2313   */\n      tag_59\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":2282:2287   */\n      dup2\n        /* \"#utility.yul\":2279:2314   */\n      eq\n        /* \"#utility.yul\":2269:2332   */\n      tag_76\n      jumpi\n        /* \"#utility.yul\":2328:2329   */\n      0x00\n        /* \"#utility.yul\":2325:2326   */\n      dup1\n        /* \"#utility.yul\":2318:2330   */\n      revert\n        /* \"#utility.yul\":2269:2332   */\n    tag_76:\n        /* \"#utility.yul\":2216:2338   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122067d06818404767511266638b1481fcbfb28c91812ca2d886ba5b5c4d61189d8f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_25": {
									"entryPoint": null,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346001819055506000600260006101000a81548160ff0219169083151502179055506104df806100756000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806385ac45151461003b57806388d5159414610045575b600080fd5b610043610061565b005b61005f600480360381019061005a9190610353565b6100de565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100b957600080fd5b6001600260006101000a81548160ff0219169083151502179055506100dc6101e1565b565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461013657600080fd5b6003829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b60011515600260009054906101000a900460ff1615151461020157600080fd5b60005b600380549050811015610326576003818154811061022557610224610447565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600460006003858154811061028157610280610447565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549081150290604051600060405180830381858888f19350505050158015610312573d6000803e3d6000fd5b50808061031e906103cf565b915050610204565b50565b6000813590506103388161047b565b92915050565b60008135905061034d81610492565b92915050565b6000806040838503121561036a57610369610476565b5b600061037885828601610329565b92505060206103898582860161033e565b9150509250929050565b600061039e826103a5565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006103da826103c5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561040d5761040c610418565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b61048481610393565b811461048f57600080fd5b50565b61049b816103c5565b81146104a657600080fd5b5056fea264697066735822122067d06818404767511266638b1481fcbfb28c91812ca2d886ba5b5c4d61189d8f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x4DF DUP1 PUSH2 0x75 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x85AC4515 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x88D51594 EQ PUSH2 0x45 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x61 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A SWAP2 SWAP1 PUSH2 0x353 JUMP JUMPDEST PUSH2 0xDE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xDC PUSH2 0x1E1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x326 JUMPI PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x225 JUMPI PUSH2 0x224 PUSH2 0x447 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x4 PUSH1 0x0 PUSH1 0x3 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x281 JUMPI PUSH2 0x280 PUSH2 0x447 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x312 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP1 DUP1 PUSH2 0x31E SWAP1 PUSH2 0x3CF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x204 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x338 DUP2 PUSH2 0x47B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x34D DUP2 PUSH2 0x492 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x36A JUMPI PUSH2 0x369 PUSH2 0x476 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x378 DUP6 DUP3 DUP7 ADD PUSH2 0x329 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x389 DUP6 DUP3 DUP7 ADD PUSH2 0x33E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39E DUP3 PUSH2 0x3A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DA DUP3 PUSH2 0x3C5 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x40D JUMPI PUSH2 0x40C PUSH2 0x418 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x484 DUP2 PUSH2 0x393 JUMP JUMPDEST DUP2 EQ PUSH2 0x48F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x49B DUP2 PUSH2 0x3C5 JUMP JUMPDEST DUP2 EQ PUSH2 0x4A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0xD068184047675112 PUSH7 0x638B1481FCBFB2 DUP13 SWAP2 DUP2 0x2C LOG2 0xD8 DUP7 0xBA JUMPDEST 0x5C 0x4D PUSH2 0x189D DUP16 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "73:1133:0:-:0;;;203:10;195:5;;:18;;;;;;;;;;;;;;;;;;281:9;271:7;:19;;;;312:5;301:8;;:16;;;;;;;;;;;;;;;;;;73:1133;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@isDeceased_88": {
									"entryPoint": 97,
									"id": 88,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@payout_118": {
									"entryPoint": 481,
									"id": 118,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setInheritance_75": {
									"entryPoint": 222,
									"id": 75,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_payable": {
									"entryPoint": 809,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payablet_uint256": {
									"entryPoint": 851,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 915,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 965,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 975,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1048,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 1095,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1142,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 1147,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2341:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "67:95:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "86:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "86:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "77:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "150:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "115:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "115:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "115:41:1"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "45:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "53:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "61:5:1",
														"type": ""
													}
												],
												"src": "7:155:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "220:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "230:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "252:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "239:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "239:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "230:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "295:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "268:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "268:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "268:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "198:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "206:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "214:5:1",
														"type": ""
													}
												],
												"src": "168:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "404:399:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "450:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "452:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "452:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "452:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "425:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "434:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "421:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "421:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "446:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "417:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "417:32:1"
															},
															"nodeType": "YulIf",
															"src": "414:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "543:125:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "558:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "572:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "562:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "587:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "630:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "641:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "626:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "626:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "650:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "597:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "597:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "587:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "678:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "693:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "707:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "697:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "723:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "758:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "769:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "754:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "754:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "778:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "733:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "733:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "723:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "366:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "377:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "389:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "397:6:1",
														"type": ""
													}
												],
												"src": "313:490:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "849:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "859:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "875:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "869:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "869:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "859:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "842:6:1",
														"type": ""
													}
												],
												"src": "809:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "943:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "953:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "982:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "964:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "964:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "953:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "925:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "935:7:1",
														"type": ""
													}
												],
												"src": "890:104:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1045:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1055:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1070:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1077:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1066:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1066:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1055:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1027:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1037:7:1",
														"type": ""
													}
												],
												"src": "1000:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1177:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1187:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1198:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1187:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1159:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1169:7:1",
														"type": ""
													}
												],
												"src": "1132:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1258:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1268:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1295:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1277:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1277:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1268:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1391:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1393:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1393:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1393:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1316:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1323:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1313:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1313:77:1"
															},
															"nodeType": "YulIf",
															"src": "1310:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1422:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1433:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1440:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1429:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1429:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1422:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1244:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1254:3:1",
														"type": ""
													}
												],
												"src": "1215:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1482:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1499:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1502:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1492:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1492:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1492:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1596:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1599:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1589:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1589:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1589:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1620:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1623:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1613:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1613:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1613:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1454:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1668:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1685:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1688:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1678:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1678:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1678:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1782:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1785:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1775:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1775:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1775:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1806:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1809:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1799:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1799:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1799:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "1640:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1915:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1932:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1935:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1925:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1925:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1925:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1826:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2038:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2055:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2058:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2048:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2048:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2048:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1949:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2123:87:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2188:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2197:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2200:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2190:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2190:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2190:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2146:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2179:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "2153:25:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2153:32:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2143:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2143:43:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2136:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2136:51:1"
															},
															"nodeType": "YulIf",
															"src": "2133:71:1"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2116:5:1",
														"type": ""
													}
												],
												"src": "2072:138:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2259:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2316:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2325:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2328:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2318:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2318:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2318:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2282:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2307:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2289:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2289:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2279:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2279:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2272:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2272:43:1"
															},
															"nodeType": "YulIf",
															"src": "2269:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2252:5:1",
														"type": ""
													}
												],
												"src": "2216:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c806385ac45151461003b57806388d5159414610045575b600080fd5b610043610061565b005b61005f600480360381019061005a9190610353565b6100de565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100b957600080fd5b6001600260006101000a81548160ff0219169083151502179055506100dc6101e1565b565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461013657600080fd5b6003829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b60011515600260009054906101000a900460ff1615151461020157600080fd5b60005b600380549050811015610326576003818154811061022557610224610447565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600460006003858154811061028157610280610447565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549081150290604051600060405180830381858888f19350505050158015610312573d6000803e3d6000fd5b50808061031e906103cf565b915050610204565b50565b6000813590506103388161047b565b92915050565b60008135905061034d81610492565b92915050565b6000806040838503121561036a57610369610476565b5b600061037885828601610329565b92505060206103898582860161033e565b9150509250929050565b600061039e826103a5565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006103da826103c5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561040d5761040c610418565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b61048481610393565b811461048f57600080fd5b50565b61049b816103c5565b81146104a657600080fd5b5056fea264697066735822122067d06818404767511266638b1481fcbfb28c91812ca2d886ba5b5c4d61189d8f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x85AC4515 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x88D51594 EQ PUSH2 0x45 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x61 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A SWAP2 SWAP1 PUSH2 0x353 JUMP JUMPDEST PUSH2 0xDE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xDC PUSH2 0x1E1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x326 JUMPI PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x225 JUMPI PUSH2 0x224 PUSH2 0x447 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x4 PUSH1 0x0 PUSH1 0x3 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x281 JUMPI PUSH2 0x280 PUSH2 0x447 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x312 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP1 DUP1 PUSH2 0x31E SWAP1 PUSH2 0x3CF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x204 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x338 DUP2 PUSH2 0x47B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x34D DUP2 PUSH2 0x492 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x36A JUMPI PUSH2 0x369 PUSH2 0x476 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x378 DUP6 DUP3 DUP7 ADD PUSH2 0x329 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x389 DUP6 DUP3 DUP7 ADD PUSH2 0x33E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39E DUP3 PUSH2 0x3A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DA DUP3 PUSH2 0x3C5 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x40D JUMPI PUSH2 0x40C PUSH2 0x418 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x484 DUP2 PUSH2 0x393 JUMP JUMPDEST DUP2 EQ PUSH2 0x48F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x49B DUP2 PUSH2 0x3C5 JUMP JUMPDEST DUP2 EQ PUSH2 0x4A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0xD068184047675112 PUSH7 0x638B1481FCBFB2 DUP13 SWAP2 DUP2 0x2C LOG2 0xD8 DUP7 0xBA JUMPDEST 0x5C 0x4D PUSH2 0x189D DUP16 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "73:1133:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;862:92;;;:::i;:::-;;692:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;862:92;385:5;;;;;;;;;;371:19;;:10;:19;;;363:28;;;;;;923:4:::1;912:8;;:15;;;;;;;;;;;;;;;;;;938:8;:6;:8::i;:::-;862:92::o:0;692:162::-;385:5;;;;;;;;;;371:19;;:10;:19;;;363:28;;;;;;781:13:::1;800:6;781:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;840:6;818:11;:19;830:6;818:19;;;;;;;;;;;;;;;:28;;;;692:162:::0;;:::o;1015:188::-;472:4;460:16;;:8;;;;;;;;;;;:16;;;452:25;;;;;;1072:6:::1;1067:129;1086:13;:20;;;;1082:1;:24;1067:129;;;1128:13;1142:1;1128:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:25;;:56;1154:11;:29;1166:13;1180:1;1166:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1154:29;;;;;;;;;;;;;;;;1128:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;1108:3;;;;;:::i;:::-;;;;1067:129;;;;1015:188::o:0;7:155:1:-;61:5;99:6;86:20;77:29;;115:41;150:5;115:41;:::i;:::-;7:155;;;;:::o;168:139::-;214:5;252:6;239:20;230:29;;268:33;295:5;268:33;:::i;:::-;168:139;;;;:::o;313:490::-;389:6;397;446:2;434:9;425:7;421:23;417:32;414:119;;;452:79;;:::i;:::-;414:119;572:1;597:61;650:7;641:6;630:9;626:22;597:61;:::i;:::-;587:71;;543:125;707:2;733:53;778:7;769:6;758:9;754:22;733:53;:::i;:::-;723:63;;678:118;313:490;;;;;:::o;890:104::-;935:7;964:24;982:5;964:24;:::i;:::-;953:35;;890:104;;;:::o;1000:126::-;1037:7;1077:42;1070:5;1066:54;1055:65;;1000:126;;;:::o;1132:77::-;1169:7;1198:5;1187:16;;1132:77;;;:::o;1215:233::-;1254:3;1277:24;1295:5;1277:24;:::i;:::-;1268:33;;1323:66;1316:5;1313:77;1310:103;;;1393:18;;:::i;:::-;1310:103;1440:1;1433:5;1429:13;1422:20;;1215:233;;;:::o;1454:180::-;1502:77;1499:1;1492:88;1599:4;1596:1;1589:15;1623:4;1620:1;1613:15;1640:180;1688:77;1685:1;1678:88;1785:4;1782:1;1775:15;1809:4;1806:1;1799:15;1949:117;2058:1;2055;2048:12;2072:138;2153:32;2179:5;2153:32;:::i;:::-;2146:5;2143:43;2133:71;;2200:1;2197;2190:12;2133:71;2072:138;:::o;2216:122::-;2289:24;2307:5;2289:24;:::i;:::-;2282:5;2279:35;2269:63;;2328:1;2325;2318:12;2269:63;2216:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "249400",
								"executionCost": "70909",
								"totalCost": "320309"
							},
							"external": {
								"isDeceased()": "infinite",
								"setInheritance(address,uint256)": "73578"
							},
							"internal": {
								"payout()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 73,
									"end": 1206,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 73,
									"end": 1206,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 73,
									"end": 1206,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 203,
									"end": 213,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 195,
									"end": 200,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 200,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 195,
									"end": 213,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 195,
									"end": 213,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 195,
									"end": 213,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 195,
									"end": 213,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 195,
									"end": 213,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 195,
									"end": 213,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 195,
									"end": 213,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 195,
									"end": 213,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 195,
									"end": 213,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 195,
									"end": 213,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 195,
									"end": 213,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 195,
									"end": 213,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 195,
									"end": 213,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 195,
									"end": 213,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 195,
									"end": 213,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 195,
									"end": 213,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 195,
									"end": 213,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 195,
									"end": 213,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 281,
									"end": 290,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 271,
									"end": 278,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 271,
									"end": 290,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 271,
									"end": 290,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 271,
									"end": 290,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 271,
									"end": 290,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 312,
									"end": 317,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 301,
									"end": 309,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 301,
									"end": 309,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 301,
									"end": 317,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 301,
									"end": 317,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 301,
									"end": 317,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 301,
									"end": 317,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 301,
									"end": 317,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 301,
									"end": 317,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 301,
									"end": 317,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 301,
									"end": 317,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 301,
									"end": 317,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 301,
									"end": 317,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 301,
									"end": 317,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 301,
									"end": 317,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 301,
									"end": 317,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 301,
									"end": 317,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 301,
									"end": 317,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 301,
									"end": 317,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 301,
									"end": 317,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 301,
									"end": 317,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 73,
									"end": 1206,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 73,
									"end": 1206,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 73,
									"end": 1206,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 73,
									"end": 1206,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 1206,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 73,
									"end": 1206,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 1206,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122067d06818404767511266638b1481fcbfb28c91812ca2d886ba5b5c4d61189d8f64736f6c63430008070033",
									".code": [
										{
											"begin": 73,
											"end": 1206,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 73,
											"end": 1206,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 73,
											"end": 1206,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1206,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1206,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 73,
											"end": 1206,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1206,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 1206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1206,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1206,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 73,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1206,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 73,
											"end": 1206,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1206,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 73,
											"end": 1206,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1206,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 1206,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1206,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 73,
											"end": 1206,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1206,
											"name": "PUSH",
											"source": 0,
											"value": "85AC4515"
										},
										{
											"begin": 73,
											"end": 1206,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 73,
											"end": 1206,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1206,
											"name": "PUSH",
											"source": 0,
											"value": "88D51594"
										},
										{
											"begin": 73,
											"end": 1206,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 73,
											"end": 1206,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1206,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 73,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1206,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 1206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1206,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 862,
											"end": 954,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 862,
											"end": 954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 862,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 862,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 862,
											"end": 954,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 862,
											"end": 954,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 862,
											"end": 954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 862,
											"end": 954,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 692,
											"end": 854,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 692,
											"end": 854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 692,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 692,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 692,
											"end": 854,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 692,
											"end": 854,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 692,
											"end": 854,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 692,
											"end": 854,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 692,
											"end": 854,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 692,
											"end": 854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 692,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 692,
											"end": 854,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 692,
											"end": 854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 692,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 692,
											"end": 854,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 692,
											"end": 854,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 692,
											"end": 854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 692,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 692,
											"end": 854,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 692,
											"end": 854,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 692,
											"end": 854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 692,
											"end": 854,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 862,
											"end": 954,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 862,
											"end": 954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 385,
											"end": 390,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 385,
											"end": 390,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 385,
											"end": 390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 385,
											"end": 390,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 385,
											"end": 390,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 385,
											"end": 390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 385,
											"end": 390,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 385,
											"end": 390,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 385,
											"end": 390,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 371,
											"end": 390,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 371,
											"end": 390,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 371,
											"end": 381,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 371,
											"end": 390,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 371,
											"end": 390,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 371,
											"end": 390,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 363,
											"end": 391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 363,
											"end": 391,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 363,
											"end": 391,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 363,
											"end": 391,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 363,
											"end": 391,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 363,
											"end": 391,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 363,
											"end": 391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 923,
											"end": 927,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 912,
											"end": 920,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 912,
											"end": 920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 912,
											"end": 927,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 912,
											"end": 927,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 912,
											"end": 927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 912,
											"end": 927,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 912,
											"end": 927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 912,
											"end": 927,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 912,
											"end": 927,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 912,
											"end": 927,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 912,
											"end": 927,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 912,
											"end": 927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 912,
											"end": 927,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 912,
											"end": 927,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 912,
											"end": 927,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 912,
											"end": 927,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 912,
											"end": 927,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 912,
											"end": 927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 912,
											"end": 927,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 912,
											"end": 927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 938,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 938,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 938,
											"end": 946,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 938,
											"end": 946,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 938,
											"end": 946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 862,
											"end": 954,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 692,
											"end": 854,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 692,
											"end": 854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 385,
											"end": 390,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 385,
											"end": 390,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 385,
											"end": 390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 385,
											"end": 390,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 385,
											"end": 390,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 385,
											"end": 390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 385,
											"end": 390,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 385,
											"end": 390,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 385,
											"end": 390,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 371,
											"end": 390,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 371,
											"end": 390,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 371,
											"end": 381,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 371,
											"end": 390,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 371,
											"end": 390,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 371,
											"end": 390,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 363,
											"end": 391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 363,
											"end": 391,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 363,
											"end": 391,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 363,
											"end": 391,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 363,
											"end": 391,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 363,
											"end": 391,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 363,
											"end": 391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 781,
											"end": 794,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 800,
											"end": 806,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 781,
											"end": 807,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 781,
											"end": 807,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 781,
											"end": 807,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 781,
											"end": 807,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 781,
											"end": 807,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 781,
											"end": 807,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 781,
											"end": 807,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 781,
											"end": 807,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 781,
											"end": 807,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 781,
											"end": 807,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 781,
											"end": 807,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 781,
											"end": 807,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 781,
											"end": 807,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 781,
											"end": 807,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 781,
											"end": 807,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 781,
											"end": 807,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 781,
											"end": 807,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 781,
											"end": 807,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 807,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 781,
											"end": 807,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 807,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 807,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 781,
											"end": 807,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 781,
											"end": 807,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 807,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 781,
											"end": 807,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 781,
											"end": 807,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 781,
											"end": 807,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 781,
											"end": 807,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 781,
											"end": 807,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 781,
											"end": 807,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 781,
											"end": 807,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 781,
											"end": 807,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 781,
											"end": 807,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 781,
											"end": 807,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 781,
											"end": 807,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 781,
											"end": 807,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 781,
											"end": 807,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 781,
											"end": 807,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 781,
											"end": 807,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 781,
											"end": 807,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 781,
											"end": 807,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 781,
											"end": 807,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 781,
											"end": 807,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 781,
											"end": 807,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 781,
											"end": 807,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 781,
											"end": 807,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 781,
											"end": 807,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 840,
											"end": 846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 818,
											"end": 829,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 818,
											"end": 837,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 830,
											"end": 836,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 818,
											"end": 837,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 818,
											"end": 837,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 837,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 818,
											"end": 837,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 818,
											"end": 837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 818,
											"end": 837,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 818,
											"end": 837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 818,
											"end": 837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 818,
											"end": 837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 818,
											"end": 837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 818,
											"end": 837,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 818,
											"end": 837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 818,
											"end": 837,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 818,
											"end": 837,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 818,
											"end": 846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 818,
											"end": 846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 818,
											"end": 846,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 818,
											"end": 846,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 692,
											"end": 854,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 692,
											"end": 854,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 692,
											"end": 854,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1015,
											"end": 1203,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1015,
											"end": 1203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 472,
											"end": 476,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 460,
											"end": 476,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 460,
											"end": 476,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 460,
											"end": 468,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 460,
											"end": 468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 460,
											"end": 468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 460,
											"end": 468,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 460,
											"end": 468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 460,
											"end": 468,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 460,
											"end": 468,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 460,
											"end": 468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 460,
											"end": 468,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 460,
											"end": 468,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 460,
											"end": 468,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 460,
											"end": 476,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 460,
											"end": 476,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 460,
											"end": 476,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 452,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 452,
											"end": 477,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 452,
											"end": 477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 452,
											"end": 477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 452,
											"end": 477,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 452,
											"end": 477,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 452,
											"end": 477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1067,
											"end": 1196,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1067,
											"end": 1196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1086,
											"end": 1099,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1086,
											"end": 1106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1086,
											"end": 1106,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1086,
											"end": 1106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1086,
											"end": 1106,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1106,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1067,
											"end": 1196,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1067,
											"end": 1196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1067,
											"end": 1196,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1142,
											"end": 1143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1144,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1144,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1128,
											"end": 1144,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1128,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1128,
											"end": 1144,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1128,
											"end": 1144,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1128,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1144,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1128,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1144,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1128,
											"end": 1144,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1144,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1128,
											"end": 1144,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1128,
											"end": 1144,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1144,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1128,
											"end": 1144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1144,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1144,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1128,
											"end": 1144,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1144,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1144,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1128,
											"end": 1144,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1128,
											"end": 1153,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 1154,
											"end": 1165,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1154,
											"end": 1183,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1166,
											"end": 1179,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1180,
											"end": 1181,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1182,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1182,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1182,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1182,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1166,
											"end": 1182,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1166,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1166,
											"end": 1182,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1166,
											"end": 1182,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1166,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1182,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1166,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1182,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1166,
											"end": 1182,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1182,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1166,
											"end": 1182,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1166,
											"end": 1182,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1182,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1182,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1166,
											"end": 1182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1182,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1182,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1166,
											"end": 1182,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1182,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1182,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1166,
											"end": 1182,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1154,
											"end": 1183,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1154,
											"end": 1183,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1154,
											"end": 1183,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1154,
											"end": 1183,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1154,
											"end": 1183,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1154,
											"end": 1183,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1154,
											"end": 1183,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1154,
											"end": 1183,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1154,
											"end": 1183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1154,
											"end": 1183,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1154,
											"end": 1183,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1154,
											"end": 1183,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1154,
											"end": 1183,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1154,
											"end": 1183,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1154,
											"end": 1183,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1154,
											"end": 1183,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1184,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1184,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1128,
											"end": 1184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1128,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1128,
											"end": 1184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1184,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1184,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1184,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1184,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1184,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1184,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1184,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1184,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1184,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1128,
											"end": 1184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1184,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1128,
											"end": 1184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1184,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1184,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1128,
											"end": 1184,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1184,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1128,
											"end": 1184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1111,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1111,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1108,
											"end": 1111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1108,
											"end": 1111,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1108,
											"end": 1111,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1108,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1111,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1111,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1111,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1067,
											"end": 1196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1067,
											"end": 1196,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1067,
											"end": 1196,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1067,
											"end": 1196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1067,
											"end": 1196,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1015,
											"end": 1203,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 162,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 7,
											"end": 162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 61,
											"end": 66,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 99,
											"end": 105,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 86,
											"end": 106,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 77,
											"end": 106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 115,
											"end": 156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 150,
											"end": 155,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 115,
											"end": 156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 115,
											"end": 156,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 115,
											"end": 156,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 115,
											"end": 156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 162,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 162,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 162,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 168,
											"end": 307,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 168,
											"end": 307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 219,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 239,
											"end": 259,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 230,
											"end": 259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 230,
											"end": 259,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 268,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 295,
											"end": 300,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 268,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 268,
											"end": 301,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 268,
											"end": 301,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 268,
											"end": 301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 168,
											"end": 307,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 168,
											"end": 307,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 168,
											"end": 307,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 168,
											"end": 307,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 168,
											"end": 307,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 313,
											"end": 803,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 313,
											"end": 803,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 389,
											"end": 395,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 397,
											"end": 403,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 446,
											"end": 448,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 434,
											"end": 443,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 425,
											"end": 432,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 421,
											"end": 444,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 417,
											"end": 449,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 414,
											"end": 533,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 414,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 414,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 452,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 452,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 452,
											"end": 531,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 452,
											"end": 531,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 452,
											"end": 531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 414,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 414,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 572,
											"end": 573,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 650,
											"end": 657,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 641,
											"end": 647,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 630,
											"end": 639,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 626,
											"end": 648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 597,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 597,
											"end": 658,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 597,
											"end": 658,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 597,
											"end": 658,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 587,
											"end": 658,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 587,
											"end": 658,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 543,
											"end": 668,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 707,
											"end": 709,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 733,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 778,
											"end": 785,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 769,
											"end": 775,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 758,
											"end": 767,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 754,
											"end": 776,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 733,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 733,
											"end": 786,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 733,
											"end": 786,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 733,
											"end": 786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 723,
											"end": 786,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 723,
											"end": 786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 678,
											"end": 796,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 313,
											"end": 803,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 313,
											"end": 803,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 313,
											"end": 803,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 313,
											"end": 803,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 313,
											"end": 803,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 313,
											"end": 803,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 890,
											"end": 994,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 890,
											"end": 994,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 935,
											"end": 942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 964,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 982,
											"end": 987,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 964,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 964,
											"end": 988,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 964,
											"end": 988,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 964,
											"end": 988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 953,
											"end": 988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 953,
											"end": 988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 890,
											"end": 994,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 890,
											"end": 994,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 890,
											"end": 994,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 890,
											"end": 994,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1000,
											"end": 1126,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1000,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1037,
											"end": 1044,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1077,
											"end": 1119,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1070,
											"end": 1075,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1055,
											"end": 1120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1055,
											"end": 1120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1126,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1126,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1132,
											"end": 1209,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1132,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1176,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1203,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1203,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1203,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1209,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1209,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1209,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1215,
											"end": 1448,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1215,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1277,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1295,
											"end": 1300,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1277,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1277,
											"end": 1301,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1277,
											"end": 1301,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1277,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1301,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1323,
											"end": 1389,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1316,
											"end": 1321,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1390,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1413,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1310,
											"end": 1413,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1393,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1393,
											"end": 1411,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1393,
											"end": 1411,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1393,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1413,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1310,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1433,
											"end": 1438,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1429,
											"end": 1442,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1442,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1442,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1215,
											"end": 1448,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1215,
											"end": 1448,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1215,
											"end": 1448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1215,
											"end": 1448,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1454,
											"end": 1634,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1454,
											"end": 1634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1502,
											"end": 1579,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1499,
											"end": 1500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1492,
											"end": 1580,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1599,
											"end": 1603,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1596,
											"end": 1597,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1589,
											"end": 1604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1627,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1620,
											"end": 1621,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1613,
											"end": 1628,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1640,
											"end": 1820,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1640,
											"end": 1820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1765,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1685,
											"end": 1686,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1678,
											"end": 1766,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1785,
											"end": 1789,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1782,
											"end": 1783,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1775,
											"end": 1790,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1813,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1806,
											"end": 1807,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1799,
											"end": 1814,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1949,
											"end": 2066,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1949,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2058,
											"end": 2059,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2055,
											"end": 2056,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2060,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2210,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2072,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2179,
											"end": 2184,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2153,
											"end": 2185,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2153,
											"end": 2185,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2153,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2146,
											"end": 2151,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2186,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2133,
											"end": 2204,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2201,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2198,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2202,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2204,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2133,
											"end": 2204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2210,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2216,
											"end": 2338,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2216,
											"end": 2338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2289,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2289,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2289,
											"end": 2313,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2289,
											"end": 2313,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2289,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2287,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2279,
											"end": 2314,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2329,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2326,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2318,
											"end": 2330,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2216,
											"end": 2338,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2216,
											"end": 2338,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"isDeceased()": "85ac4515",
							"setInheritance(address,uint256)": "88d51594"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"isDeceased\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setInheritance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"will.sol\":\"Will\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"will.sol\":{\"keccak256\":\"0x77edb1c8379de3e31f63127d91b0a2abb88ddf1307cb7bca748dee1bebe7cf0e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://26f75e588c5461bcceec8ad5a0e803eb5ea60da691b74409f3469c9573f1e0b5\",\"dweb:/ipfs/QmNj2M2aM2dtSE9RjLdLDLFC5k5EdBqJeowdxfXfLrHt3D\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "will.sol:Will",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 5,
								"contract": "will.sol:Will",
								"label": "fortune",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 7,
								"contract": "will.sol:Will",
								"label": "deceased",
								"offset": 0,
								"slot": "2",
								"type": "t_bool"
							},
							{
								"astId": 49,
								"contract": "will.sol:Will",
								"label": "familyWallets",
								"offset": 0,
								"slot": "3",
								"type": "t_array(t_address_payable)dyn_storage"
							},
							{
								"astId": 53,
								"contract": "will.sol:Will",
								"label": "inheritance",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_array(t_address_payable)dyn_storage": {
								"base": "t_address_payable",
								"encoding": "dynamic_array",
								"label": "address payable[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n --> will.sol:9:5:\n  |\n9 |     constructor() payable public {\n  |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 325,
					"file": "will.sol",
					"start": 155
				},
				"type": "Warning"
			}
		],
		"sources": {
			"will.sol": {
				"ast": {
					"absolutePath": "will.sol",
					"exportedSymbols": {
						"Will": [
							119
						]
					},
					"id": 120,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".22",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:32:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 119,
							"linearizedBaseContracts": [
								119
							],
							"name": "Will",
							"nameLocation": "82:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "102:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 119,
									"src": "94:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "94:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "fortune",
									"nameLocation": "119:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 119,
									"src": "114:12:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "114:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "deceased",
									"nameLocation": "138:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 119,
									"src": "133:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 6,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "133:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "184:141:0",
										"statements": [
											{
												"expression": {
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 10,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "195:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 11,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "203:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "203:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "195:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 14,
												"nodeType": "ExpressionStatement",
												"src": "195:18:0"
											},
											{
												"expression": {
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 15,
														"name": "fortune",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "271:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 16,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "281:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 17,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "281:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "271:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 19,
												"nodeType": "ExpressionStatement",
												"src": "271:19:0"
											},
											{
												"expression": {
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 20,
														"name": "deceased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "301:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 21,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "312:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "301:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "301:16:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "166:2:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "184:0:0"
									},
									"scope": 119,
									"src": "155:170:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 35,
										"nodeType": "Block",
										"src": "352:59:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 28,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "371:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "371:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 30,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "385:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "371:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 27,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "363:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "363:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "363:28:0"
											},
											{
												"id": 34,
												"nodeType": "PlaceholderStatement",
												"src": "402:1:0"
											}
										]
									},
									"id": 36,
									"name": "onlyOwner",
									"nameLocation": "342:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "352:0:0"
									},
									"src": "333:78:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "441:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 39,
																"name": "deceased",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "460:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 40,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "472:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "460:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 38,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "452:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "452:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "452:25:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "488:1:0"
											}
										]
									},
									"id": 46,
									"name": "mustBeDeceased",
									"nameLocation": "426:14:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "441:0:0"
									},
									"src": "417:80:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 49,
									"mutability": "mutable",
									"name": "familyWallets",
									"nameLocation": "551:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 119,
									"src": "533:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
										"typeString": "address payable[]"
									},
									"typeName": {
										"baseType": {
											"id": 47,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "533:15:0",
											"stateMutability": "payable",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											}
										},
										"id": 48,
										"nodeType": "ArrayTypeName",
										"src": "533:17:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
											"typeString": "address payable[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 53,
									"mutability": "mutable",
									"name": "inheritance",
									"nameLocation": "629:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 119,
									"src": "605:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 52,
										"keyType": {
											"id": 50,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "613:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "605:23:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 51,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "623:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 74,
										"nodeType": "Block",
										"src": "770:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 65,
															"name": "wallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "800:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"expression": {
															"id": 62,
															"name": "familyWallets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 49,
															"src": "781:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
																"typeString": "address payable[] storage ref"
															}
														},
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "781:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_payable_$dyn_storage_ptr_$_t_address_payable_$returns$__$bound_to$_t_array$_t_address_payable_$dyn_storage_ptr_$",
															"typeString": "function (address payable[] storage pointer,address payable)"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "781:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 67,
												"nodeType": "ExpressionStatement",
												"src": "781:26:0"
											},
											{
												"expression": {
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 68,
															"name": "inheritance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "818:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 70,
														"indexExpression": {
															"id": 69,
															"name": "wallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "830:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "818:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 71,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 57,
														"src": "840:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "818:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 73,
												"nodeType": "ExpressionStatement",
												"src": "818:28:0"
											}
										]
									},
									"functionSelector": "88d51594",
									"id": 75,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 60,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 59,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 36,
												"src": "760:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "760:9:0"
										}
									],
									"name": "setInheritance",
									"nameLocation": "701:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "wallet",
												"nameLocation": "732:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "716:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "716:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "745:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "740:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "740:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "715:37:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "770:0:0"
									},
									"scope": 119,
									"src": "692:162:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "901:53:0",
										"statements": [
											{
												"expression": {
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 80,
														"name": "deceased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "912:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 81,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "923:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "912:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 83,
												"nodeType": "ExpressionStatement",
												"src": "912:15:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 84,
														"name": "payout",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "938:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "938:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "938:8:0"
											}
										]
									},
									"functionSelector": "85ac4515",
									"id": 88,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 78,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 77,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 36,
												"src": "891:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "891:9:0"
										}
									],
									"name": "isDeceased",
									"nameLocation": "871:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "881:2:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "901:0:0"
									},
									"scope": 119,
									"src": "862:92:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 117,
										"nodeType": "Block",
										"src": "1056:147:0",
										"statements": [
											{
												"body": {
													"id": 115,
													"nodeType": "Block",
													"src": "1113:83:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 108,
																			"name": "inheritance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 53,
																			"src": "1154:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 112,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 109,
																				"name": "familyWallets",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 49,
																				"src": "1166:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
																					"typeString": "address payable[] storage ref"
																				}
																			},
																			"id": 111,
																			"indexExpression": {
																				"id": 110,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 94,
																				"src": "1180:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1166:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1154:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 104,
																			"name": "familyWallets",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 49,
																			"src": "1128:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
																				"typeString": "address payable[] storage ref"
																			}
																		},
																		"id": 106,
																		"indexExpression": {
																			"id": 105,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 94,
																			"src": "1142:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1128:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "1128:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1128:56:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 114,
															"nodeType": "ExpressionStatement",
															"src": "1128:56:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 97,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "1082:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 98,
															"name": "familyWallets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 49,
															"src": "1086:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
																"typeString": "address payable[] storage ref"
															}
														},
														"id": 99,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1086:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1082:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 116,
												"initializationExpression": {
													"assignments": [
														94
													],
													"declarations": [
														{
															"constant": false,
															"id": 94,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1077:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 116,
															"src": "1072:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 93,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1072:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 96,
													"initialValue": {
														"hexValue": "30",
														"id": 95,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1079:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1072:8:0"
												},
												"loopExpression": {
													"expression": {
														"id": 102,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1108:3:0",
														"subExpression": {
															"id": 101,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "1108:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 103,
													"nodeType": "ExpressionStatement",
													"src": "1108:3:0"
												},
												"nodeType": "ForStatement",
												"src": "1067:129:0"
											}
										]
									},
									"id": 118,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 91,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 90,
												"name": "mustBeDeceased",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1041:14:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1041:14:0"
										}
									],
									"name": "payout",
									"nameLocation": "1024:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1030:2:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1056:0:0"
									},
									"scope": 119,
									"src": "1015:188:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 120,
							"src": "73:1133:0",
							"usedErrors": []
						}
					],
					"src": "37:1169:0"
				},
				"id": 0
			}
		}
	}
}